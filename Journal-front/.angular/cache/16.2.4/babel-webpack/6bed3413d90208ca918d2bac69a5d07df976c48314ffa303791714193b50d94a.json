{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../journal-api/src/services/authentication.service\";\nexport class UserService {\n  constructor(authenticationService) {\n    this.authenticationService = authenticationService;\n  }\n  login(authenticationRequest) {\n    const params = {\n      body: authenticationRequest // Map the request body\n    };\n\n    return this.authenticationService.authenticate(params);\n  }\n  setConnectedUser(authenticationResponse) {\n    let token = JSON.stringify(authenticationResponse.accessToken);\n    console.log(token);\n    localStorage.setItem('connectedUser', JSON.stringify(authenticationResponse));\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","authenticationService","login","authenticationRequest","params","body","authenticate","setConnectedUser","authenticationResponse","token","JSON","stringify","accessToken","console","log","localStorage","setItem","_","i0","ɵɵinject","i1","AuthenticationService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\waela\\OneDrive\\Documents\\finalYearProject\\Journal-front\\src\\app\\services\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AuthenticationService} from \"../../../journal-api/src/services/authentication.service\";\nimport {AuthenticationRequest} from \"../../../journal-api/src/models/authentication-request\";\nimport {Authenticate$Params} from \"../../../journal-api/src/fn/authentication/authenticate\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationResponse} from \"../../../journal-api/src/models/authentication-response\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n    constructor(private authenticationService:AuthenticationService\n    ) {\n    }\n\n    login(authenticationRequest:AuthenticationRequest):Observable<AuthenticationResponse>{\n        const params: Authenticate$Params = {\n            body: authenticationRequest // Map the request body\n        };\n        return this.authenticationService.authenticate(params) ;\n    }\n\n    setConnectedUser(authenticationResponse:AuthenticationResponse){\n        let token:string = JSON.stringify(authenticationResponse.accessToken) ;\n        console.log(token) ;\n        localStorage.setItem('connectedUser', JSON.stringify(authenticationResponse));\n    }\n\n}\n"],"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,qBAA2C;IAA3C,KAAAA,qBAAqB,GAArBA,qBAAqB;EAEzC;EAEAC,KAAKA,CAACC,qBAA2C;IAC7C,MAAMC,MAAM,GAAwB;MAChCC,IAAI,EAAEF,qBAAqB,CAAC;KAC/B;;IACD,OAAO,IAAI,CAACF,qBAAqB,CAACK,YAAY,CAACF,MAAM,CAAC;EAC1D;EAEAG,gBAAgBA,CAACC,sBAA6C;IAC1D,IAAIC,KAAK,GAAUC,IAAI,CAACC,SAAS,CAACH,sBAAsB,CAACI,WAAW,CAAC;IACrEC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IAClBM,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEN,IAAI,CAACC,SAAS,CAACH,sBAAsB,CAAC,CAAC;EACjF;EAAC,QAAAS,CAAA,G;qBAjBQlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,qBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}