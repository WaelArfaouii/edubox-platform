{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8083/auth/login'; // Replace with your API endpoint\n  }\n  // Example of a POST request with a request body\n  login(email, password) {\n    const loginData = {\n      email,\n      password\n    };\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(`${this.apiUrl}`, loginData, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message\n    return throwError('Something went wrong. Please try again later.');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","AuthService","constructor","http","apiUrl","login","email","password","loginData","headers","post","pipe","handleError","error","ErrorEvent","console","message","status","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\waela\\OneDrive\\Desktop\\finalYearProject\\Journal-front\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private apiUrl = 'http://localhost:8083/auth/login'; // Replace with your API endpoint\n\n    constructor(private http: HttpClient) { }\n\n    // Example of a POST request with a request body\n    login(email: string, password: string): Observable<any> {\n        const loginData = { email, password };\n        const headers = new HttpHeaders({\n            'Content-Type': 'application/json'\n        });\n\n        return this.http.post(`${this.apiUrl}`, loginData, { headers }).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred\n            console.error('An error occurred:', error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`\n            );\n        }\n        // Return an observable with a user-facing error message\n        return throwError('Something went wrong. Please try again later.');\n    }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;AACjF,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,WAAW;EAGpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC,CAAC,CAAC;EAEb;EAExC;EACAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACjC,MAAMC,SAAS,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IACrC,MAAME,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC5B,cAAc,EAAE;KACnB,CAAC;IAEF,OAAO,IAAI,CAACK,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,EAAE,EAAEI,SAAS,EAAE;MAAEC;IAAO,CAAE,CAAC,CAACE,IAAI,CAChEX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC/B;EACL;EAEQA,WAAWA,CAACC,KAAwB;IACxC,IAAIA,KAAK,CAACA,KAAK,YAAYC,UAAU,EAAE;MACnC;MACAC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC;KAC3D,MAAM;MACH;MACAD,OAAO,CAACF,KAAK,CACT,yBAAyBA,KAAK,CAACI,MAAM,IAAI,GACzC,aAAaJ,KAAK,CAACA,KAAK,EAAE,CAC7B;;IAEL;IACA,OAAOd,UAAU,CAAC,+CAA+C,CAAC;EACtE;EAAC,QAAAmB,CAAA,G;qBA9BQjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}