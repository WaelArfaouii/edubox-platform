{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(data) {\n    const url = 'http://localhost:8083/auth/login'; // Replace with your API endpoint\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(url, data, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function AuthenService_Factory(t) {\n    return new (t || AuthenService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenService,\n    factory: AuthenService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AuthenService","constructor","http","login","data","url","headers","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\waela\\OneDrive\\Desktop\\finalYearProject\\Journal-front\\src\\app\\services\\authen.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenService {\n\n  constructor(private http:HttpClient) { }\n\n  public login(data: any){\n\n    const url = 'http://localhost:8083/auth/login'; // Replace with your API endpoint\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http.post(url, data, { headers });\n\n  }\n}\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAK5D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEhCC,KAAKA,CAACC,IAAS;IAEpB,MAAMC,GAAG,GAAG,kCAAkC,CAAC,CAAC;IAChD,MAAMC,OAAO,GAAG,IAAIP,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IAEF,OAAO,IAAI,CAACG,IAAI,CAACK,IAAI,CAACF,GAAG,EAAED,IAAI,EAAE;MAAEE;IAAO,CAAE,CAAC;EAE/C;EAAC,QAAAE,CAAA,G;qBAbUR,aAAa,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbb,aAAa;IAAAc,OAAA,EAAbd,aAAa,CAAAe,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}