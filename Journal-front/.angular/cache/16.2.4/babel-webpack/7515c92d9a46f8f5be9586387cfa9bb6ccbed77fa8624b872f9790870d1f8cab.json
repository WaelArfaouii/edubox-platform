{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../journal-api/src\";\nimport * as i2 from \"@angular/common/http\";\nexport class UserService {\n  constructor(authenticationService, http) {\n    this.authenticationService = authenticationService;\n    this.http = http;\n  }\n  login(authenticationRequest) {\n    let apiUrl = 'http://localhost:8083/auth/login';\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(apiUrl, authenticationRequest, {\n      headers,\n      responseType: 'json'\n    });\n  }\n  setAccessToken(authenticationResponse) {\n    // localStorage.setItem('accessToken', JSON.stringify(authenticationResponse));\n    let token = authenticationResponse['accessToken'];\n    console.log(token);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","UserService","constructor","authenticationService","http","login","authenticationRequest","apiUrl","headers","post","responseType","setAccessToken","authenticationResponse","token","console","log","_","i0","ɵɵinject","i1","AuthenticationService","i2","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\waela\\OneDrive\\Documents\\finalYearProject\\Journal-front\\src\\app\\services\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {AuthenticationRequest, AuthenticationResponse, AuthenticationService} from \"../../../journal-api/src\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n    constructor(private authenticationService:AuthenticationService , private http:HttpClient\n    ) {\n    }\n\n    login(authenticationRequest:AuthenticationRequest){\n\n      let apiUrl:string = 'http://localhost:8083/auth/login';\n      const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n      return this.http.post(apiUrl, authenticationRequest, { headers, responseType: 'json' });\n\n    }\n\n  setAccessToken(authenticationResponse: any): void {\n    // localStorage.setItem('accessToken', JSON.stringify(authenticationResponse));\n      let token:string = authenticationResponse['accessToken'] ;\n      console.log(token) ;\n  }\n\n}\n"],"mappings":"AAGA,SAAoBA,WAAW,QAAO,sBAAsB;;;;AAK5D,OAAM,MAAOC,WAAW;EAEpBC,YAAoBC,qBAA2C,EAAWC,IAAe;IAArE,KAAAD,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAC,IAAI,GAAJA,IAAI;EAE9E;EAEAC,KAAKA,CAACC,qBAA2C;IAE/C,IAAIC,MAAM,GAAU,kCAAkC;IACtD,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACI,IAAI,CAACK,IAAI,CAACF,MAAM,EAAED,qBAAqB,EAAE;MAAEE,OAAO;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAEzF;EAEFC,cAAcA,CAACC,sBAA2B;IACxC;IACE,IAAIC,KAAK,GAAUD,sBAAsB,CAAC,aAAa,CAAC;IACxDE,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;EAAC,QAAAG,CAAA,G;qBAlBUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}