{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class AppHttpInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(request, next) {\n    if (!request.url.includes(\"/auth/login\")) {\n      let newRequest = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n      });\n      return next.handle(newRequest);\n    }\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function AppHttpInterceptor_Factory(t) {\n    return new (t || AppHttpInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppHttpInterceptor,\n    factory: AppHttpInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AppHttpInterceptor","constructor","authService","intercept","request","next","url","includes","newRequest","clone","headers","set","accessToken","handle","_","i0","ɵɵinject","i1","AuthService","_2","factory","ɵfac"],"sources":["C:\\Users\\waela\\OneDrive\\Documents\\finalYearProject\\Journal-front\\src\\app\\interceptors\\app-http.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable()\nexport class AppHttpInterceptor implements HttpInterceptor {\n\n  constructor(private authService:AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        if (!request.url.includes(\"/auth/login\")){\n          let newRequest = request.clone({\n            headers : request.headers.set('Authorization','Bearer '+this.authService.accessToken)\n          })\n          return next.handle(newRequest);\n        }\n        return next.handle(request);\n  }\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAAe;EAE9CC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACpD,IAAI,CAACD,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAC;MACvC,IAAIC,UAAU,GAAGJ,OAAO,CAACK,KAAK,CAAC;QAC7BC,OAAO,EAAGN,OAAO,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,SAAS,GAAC,IAAI,CAACT,WAAW,CAACU,WAAW;OACrF,CAAC;MACF,OAAOP,IAAI,CAACQ,MAAM,CAACL,UAAU,CAAC;;IAEhC,OAAOH,IAAI,CAACQ,MAAM,CAACT,OAAO,CAAC;EACjC;EAAC,QAAAU,CAAA,G;qBAZUd,kBAAkB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBnB,kBAAkB;IAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}