{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../journal-api/src\";\nimport * as i2 from \"@angular/common/http\";\nexport class UserService {\n  constructor(authenticationService, http, authorService, editorService, reviewerService) {\n    this.authenticationService = authenticationService;\n    this.http = http;\n    this.authorService = authorService;\n    this.editorService = editorService;\n    this.reviewerService = reviewerService;\n  }\n  login(authenticationRequest) {\n    return this.authenticationService.authenticate(authenticationRequest);\n  }\n  getUserData(data) {\n    let specs = this.getUserEmailAndRole(data);\n    let email = specs.email;\n    const encodedEmail = {\n      \"email\": email\n    };\n    let role = specs.roles[0];\n    switch (role) {\n      case 'AUTHOR':\n        return this.authorService.getAuthorByEmail(encodedEmail).subscribe(auth => {});\n        break;\n      case 'EDITOR':\n        return this.editorService.getEditorByEmail(encodedEmail);\n        break;\n      case 'REVIEWER':\n        return this.reviewerService.getReviewerByEmail(encodedEmail);\n        break;\n      default:\n        return {\n          \"message\": \"user not found\"\n        };\n        break;\n    }\n  }\n  getUserEmailAndRole(authenticationResponse) {\n    // localStorage.setItem('accessToken', JSON.stringify(authenticationResponse));\n    this.isAuthenticated = true;\n    this.token = authenticationResponse['accessToken'];\n    let decodedJwt = jwtDecode(this.token);\n    this.email = decodedJwt.sub;\n    this.roles = decodedJwt.role;\n    return {\n      'email': this.email,\n      'roles': this.roles\n    };\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i1.AuthorService), i0.ɵɵinject(i1.EditorService), i0.ɵɵinject(i1.ReviewerService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["jwtDecode","UserService","constructor","authenticationService","http","authorService","editorService","reviewerService","login","authenticationRequest","authenticate","getUserData","data","specs","getUserEmailAndRole","email","encodedEmail","role","roles","getAuthorByEmail","subscribe","auth","getEditorByEmail","getReviewerByEmail","authenticationResponse","isAuthenticated","token","decodedJwt","sub","_","i0","ɵɵinject","i1","AuthenticationService","i2","HttpClient","AuthorService","EditorService","ReviewerService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\waela\\OneDrive\\Documents\\finalYearProject\\Journal-front\\src\\app\\services\\user\\user.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {\n    AuthenticationRequest,\n    AuthenticationResponse,\n    AuthenticationService,\n    AuthorDTO, AuthorService, EditorService, ReviewerService\n} from \"../../../journal-api/src\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport jwtDecode from \"jwt-decode\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    token!: string;\n    isAuthenticated!: boolean;\n    email!: string;\n    roles!: any;\n\n    constructor(private authenticationService: AuthenticationService, private http: HttpClient,\n                private authorService: AuthorService, private editorService: EditorService,\n                private reviewerService: ReviewerService\n    ) {\n    }\n\n    login(authenticationRequest: AuthenticationRequest) {\n       return  this.authenticationService.authenticate(authenticationRequest);\n    }\n    getUserData(data: any) {\n        let specs: any = this.getUserEmailAndRole(data);\n        let email: string = specs.email;\n        const encodedEmail = {\"email\": email};\n        let role: string = specs.roles[0];\n        switch (role) {\n            case 'AUTHOR':\n                return this.authorService.getAuthorByEmail(encodedEmail).subscribe((auth: AuthorDTO) => {\n                });\n                break;\n\n            case 'EDITOR':\n                return this.editorService.getEditorByEmail(encodedEmail);\n                break;\n\n            case 'REVIEWER':\n                return this.reviewerService.getReviewerByEmail(encodedEmail);\n                break;\n\n            default :\n                return {\"message\": \"user not found\"};\n                break;\n        }\n    }\n\n    getUserEmailAndRole(authenticationResponse: AuthenticationResponse) {\n        // localStorage.setItem('accessToken', JSON.stringify(authenticationResponse));\n        this.isAuthenticated = true;\n        this.token = authenticationResponse['accessToken'];\n        let decodedJwt: any = jwtDecode(this.token);\n        this.email = decodedJwt.sub;\n        this.roles = decodedJwt.role;\n        return {\n            'email': this.email,\n            'roles': this.roles\n        }\n    }\n\n}\n"],"mappings":"AASA,OAAOA,SAAS,MAAM,YAAY;;;;AAKlC,OAAM,MAAOC,WAAW;EAOpBC,YAAoBC,qBAA4C,EAAUC,IAAgB,EACtEC,aAA4B,EAAUC,aAA4B,EAClEC,eAAgC;IAFhC,KAAAJ,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAC,IAAI,GAAJA,IAAI;IAC1D,KAAAC,aAAa,GAAbA,aAAa;IAAyB,KAAAC,aAAa,GAAbA,aAAa;IACnD,KAAAC,eAAe,GAAfA,eAAe;EAEnC;EAEAC,KAAKA,CAACC,qBAA4C;IAC/C,OAAQ,IAAI,CAACN,qBAAqB,CAACO,YAAY,CAACD,qBAAqB,CAAC;EACzE;EACAE,WAAWA,CAACC,IAAS;IACjB,IAAIC,KAAK,GAAQ,IAAI,CAACC,mBAAmB,CAACF,IAAI,CAAC;IAC/C,IAAIG,KAAK,GAAWF,KAAK,CAACE,KAAK;IAC/B,MAAMC,YAAY,GAAG;MAAC,OAAO,EAAED;IAAK,CAAC;IACrC,IAAIE,IAAI,GAAWJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC;IACjC,QAAQD,IAAI;MACR,KAAK,QAAQ;QACT,OAAO,IAAI,CAACZ,aAAa,CAACc,gBAAgB,CAACH,YAAY,CAAC,CAACI,SAAS,CAAEC,IAAe,IAAI,CACvF,CAAC,CAAC;QACF;MAEJ,KAAK,QAAQ;QACT,OAAO,IAAI,CAACf,aAAa,CAACgB,gBAAgB,CAACN,YAAY,CAAC;QACxD;MAEJ,KAAK,UAAU;QACX,OAAO,IAAI,CAACT,eAAe,CAACgB,kBAAkB,CAACP,YAAY,CAAC;QAC5D;MAEJ;QACI,OAAO;UAAC,SAAS,EAAE;QAAgB,CAAC;QACpC;;EAEZ;EAEAF,mBAAmBA,CAACU,sBAA8C;IAC9D;IACA,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,KAAK,GAAGF,sBAAsB,CAAC,aAAa,CAAC;IAClD,IAAIG,UAAU,GAAQ3B,SAAS,CAAC,IAAI,CAAC0B,KAAK,CAAC;IAC3C,IAAI,CAACX,KAAK,GAAGY,UAAU,CAACC,GAAG;IAC3B,IAAI,CAACV,KAAK,GAAGS,UAAU,CAACV,IAAI;IAC5B,OAAO;MACH,OAAO,EAAE,IAAI,CAACF,KAAK;MACnB,OAAO,EAAE,IAAI,CAACG;KACjB;EACL;EAAC,QAAAW,CAAA,G;qBApDQ5B,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAI,aAAA,GAAAN,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAK,aAAA,GAAAP,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAM,eAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtC,WAAW;IAAAuC,OAAA,EAAXvC,WAAW,CAAAwC,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}