{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport jwtDecode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../journal-api/src\";\nimport * as i2 from \"@angular/common/http\";\nexport class UserService {\n  constructor(authenticationService, http) {\n    this.authenticationService = authenticationService;\n    this.http = http;\n  }\n  login(authenticationRequest) {\n    let apiUrl = 'http://localhost:8083/auth/login';\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(apiUrl, authenticationRequest, {\n      headers,\n      responseType: 'json'\n    });\n  }\n  getUserEmailAndRole(authenticationResponse) {\n    // localStorage.setItem('accessToken', JSON.stringify(authenticationResponse));\n    this.isAuthenticated = true;\n    this.token = authenticationResponse['accessToken'];\n    let decodedJwt = jwtDecode(this.token);\n    this.email = decodedJwt.sub;\n    this.roles = decodedJwt.roles;\n    return {\n      'email': this.email,\n      'roles': this.roles\n    };\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","jwtDecode","UserService","constructor","authenticationService","http","login","authenticationRequest","apiUrl","headers","post","responseType","getUserEmailAndRole","authenticationResponse","isAuthenticated","token","decodedJwt","email","sub","roles","_","i0","ɵɵinject","i1","AuthenticationService","i2","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\waela\\OneDrive\\Documents\\finalYearProject\\Journal-front\\src\\app\\services\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {AuthenticationRequest, AuthenticationResponse, AuthenticationService} from \"../../../journal-api/src\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport jwtDecode from \"jwt-decode\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n    token!:string ;\n    isAuthenticated!:boolean ;\n    email!:string ;\n    roles!:any ;\n\n    constructor(private authenticationService:AuthenticationService , private http:HttpClient\n    ) {\n    }\n\n    login(authenticationRequest:AuthenticationRequest){\n\n      let apiUrl:string = 'http://localhost:8083/auth/login';\n      const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n      return this.http.post(apiUrl, authenticationRequest, { headers, responseType: 'json' });\n\n    }\n\n  getUserEmailAndRole(authenticationResponse: any) {\n    // localStorage.setItem('accessToken', JSON.stringify(authenticationResponse));\n      this.isAuthenticated = true ;\n      this.token = authenticationResponse['accessToken'] ;\n      let decodedJwt: any= jwtDecode(this.token) ;\n      this.email = decodedJwt.sub ;\n      this.roles = decodedJwt.roles ;\n      return {\n        'email':this.email,\n        'roles':this.roles\n      }\n  }\n\n}\n"],"mappings":"AAGA,SAAoBA,WAAW,QAAO,sBAAsB;AAC5D,OAAOC,SAAS,MAAM,YAAY;;;;AAKlC,OAAM,MAAOC,WAAW;EAOpBC,YAAoBC,qBAA2C,EAAWC,IAAe;IAArE,KAAAD,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAC,IAAI,GAAJA,IAAI;EAE9E;EAEAC,KAAKA,CAACC,qBAA2C;IAE/C,IAAIC,MAAM,GAAU,kCAAkC;IACtD,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACK,IAAI,CAACK,IAAI,CAACF,MAAM,EAAED,qBAAqB,EAAE;MAAEE,OAAO;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAEzF;EAEFC,mBAAmBA,CAACC,sBAA2B;IAC7C;IACE,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,KAAK,GAAGF,sBAAsB,CAAC,aAAa,CAAC;IAClD,IAAIG,UAAU,GAAOf,SAAS,CAAC,IAAI,CAACc,KAAK,CAAC;IAC1C,IAAI,CAACE,KAAK,GAAGD,UAAU,CAACE,GAAG;IAC3B,IAAI,CAACC,KAAK,GAAGH,UAAU,CAACG,KAAK;IAC7B,OAAO;MACL,OAAO,EAAC,IAAI,CAACF,KAAK;MAClB,OAAO,EAAC,IAAI,CAACE;KACd;EACL;EAAC,QAAAC,CAAA,G;qBA9BUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}